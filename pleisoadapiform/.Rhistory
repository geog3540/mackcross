source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
df <- read_csv("Documents/research_projects/primate_map/initial_raw_data/primates_coordinates_a.csv")
df <- read_csv("~/initial_raw_data/primates_coordinates_a.csv")
df <- read_csv("~/Documents/research_projects/primate_map/initial_raw_data/primates_coordinates_a.csv")
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
print(unique(df$lng))
df2 <- subset(df, unique(df$lng))
unique_rows <- subset(df, unique(df$lng))
unique_rows <- unique(df$lng)
df2 <- df[unique_rows, ]
df2 <- subset(df, lng != unique_rows)
View(df2)
getwd()
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
rm(list = ls())
library(readr)
df <- read_csv("~/Documents/research_projects/primate_map/initial_raw_data/primates_coordinates_a.csv")
# Filtered out entries without preexisting date and GIS coordinates
df <- subset(df, max_ma > 0)
# Adjusted data types
df$state <- factor(df$state)
names(df)
# Deleted unnecessary columns
df <- df[, c("accepted_name", "max_ma", "min_ma", "lng", "lat", "state", "county")]
# Made species name R friendly
df$accepted_name <- sub(" ", "_", df$accepted_name)
# Removed redundancy in coordinates
unique_rows <- unique(df$lng)
df2 <- subset(df, lng != unique_rows)
df2 <- df[unique_rows, ]
View(df2)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
rm(list = ls())
library(readr)
df <- read_csv("~/Documents/research_projects/primate_map/initial_raw_data/primates_coordinates_a.csv")
# Filtered out entries without preexisting date and GIS coordinates
df <- subset(df, max_ma > 0)
# Adjusted data types
df$state <- factor(df$state)
names(df)
# Deleted unnecessary columns
df <- df[, c("accepted_name", "max_ma", "min_ma", "lng", "lat", "state", "county")]
# Made species name R friendly
df$accepted_name <- sub(" ", "_", df$accepted_name)
# Removed redundancy in coordinates
unique_rows <- unique(df$lng)
df2 <- subset(df, lng != unique_rows)
df2 <- subset(df, lng == unique_rows)
# Removed redundancy in coordinates
unique_rows <- unique(df$lng)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
# Removed redundancy in coordinates
unique_rows <- unique(df$lng)
View(df)
unique_rows
# Removed redundancy in coordinates
df$lng <- factor(df$lng)
df$lng
df$lat <- factor(df$lat)
df$lat
?unique
df$accepted_name <- factor(df$accepted_name)
df$accepted_name
unique_rows <- unique(df$accepted_name)
df2 <- subset(df, accepted_name == unique_rows)
View(df2)
view(unique_rows)
print(unique_rows)
View(df)
df2 <- df[unique_rows, ]
df2 <- df["unique_rows", ]
View(df2)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
unique_rows
unique_species_GIS <- unique(df$accepted_name)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
View(df)
df$accepted_name <- unique(df$accepted_name)
# df2 <- df["unique_rows", ]
df2 <- subset(df, accepted_name == "unique_species_GIS")
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
View(df)
?duplicate
library(dplyr)
print(distinct(df))
df2 <- distinct(df)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
View(df2)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
View(df2)
df3 <- subset(df2, state != "Fayum")
View(df3)
?subset
df3 <- subset(df2, state != "Fayum" & is.na(subset))
df3 <- subset(df2, state != "Fayum")
df3 <- subset(df2, state != "Fayum" | state == "NA")
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
df3 <- subset(df2, state != "Fayum" | state == NA)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
df3 <- subset(df2, state != "rm_fayum")
View(df3)
View(df3)
View(df2)
df2$state <- df2$state - rm_fayum
rm_fayum <- subset(df2, state == "Fayum" | is.na(state))
View(df3)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
View(df3)
df3 <- subset(df2, state != "Fayum" | is.na(state))
View(df3)
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
getwd()
source("~/Documents/research_projects/primate_map/pleisoadapiform/data_clean_coordinate_only.R")
